package com.yourapp;

import javax.swing.JOptionPane;
import com.wyday.turboactivate.*;
import javax.swing.JFrame;

public class frmMain extends JFrame implements TrialChangeEvent {

	private TurboActivate ta = null;
	boolean isGenuine;

	// Set the trial flags you want to use. Here we've selected that the
	// trial data should be stored system-wide (TA_SYSTEM) and that we should
	// use un-resetable verified trials (TA_VERIFIED_TRIAL).
	private int trialFlags = TurboActivate.TA_SYSTEM | TurboActivate.TA_VERIFIED_TRIAL;

	// Don't use 0 for either of these values.
	// We recommend 90, 14. But if you want to lower the values we don't recommend going
	// below 7 days for each value. Anything lower and you're just punishing legit users.
	private static final int DaysBetweenChecks = 90;
	private static final int GracePeriodLength = 14;

	/**
	 * Creates new form frmMain
	 */
	public frmMain()
	{
		// generated GUI builder code
		initComponents();

		try
		{
			//TODO: goto the version page at LimeLM and paste this GUID here
			ta = new TurboActivate("18324776654b3946fc44a5f3.49025204");

			// we're telling TurboActivate that this class will listen for the Trial callback
			// see the TrialChange function.
			ta.addTrialChangeListener(this);

			// Check if we're activated, and every 90 days verify it with the activation servers
			// In this example we won't show an error if the activation was done offline
			// (see the 3rd parameter of the IsGenuine() function) -- https://wyday.com/limelm/help/offline-activation/
			IsGenuineResult gr = ta.IsGenuine(DaysBetweenChecks, GracePeriodLength, true, false);

			isGenuine = gr == IsGenuineResult.Genuine ||
                    	gr == IsGenuineResult.GenuineFeaturesChanged ||

                        // an internet error means the user is activated but
                        // TurboActivate failed to contact the LimeLM servers
                        gr == IsGenuineResult.InternetError;


			// If IsGenuineEx() is telling us we're not activated
			// but the IsActivated() function is telling us that the activation
			// data on the computer is valid (i.e. the crypto-signed-fingerprint matches the computer)
			// then that means that the customer has passed the grace period and they must re-verify
			// with the servers to continue to use your app.

			//Note: DO NOT allow the customer to just continue to use your app indefinitely with absolutely
			//      no reverification with the servers. If you want to do that then don't use IsGenuine() or
			//      IsGenuineEx() at all -- just use IsActivated().
			if (!isGenuine && ta.IsActivated())
			{
				// We're treating the customer as is if they aren't activated, so they can't use your app.

				// However, we show them a dialog where they can reverify with the servers immediately.

				ReVerifyNow frmReverify = new ReVerifyNow(this, true, ta, DaysBetweenChecks, GracePeriodLength);
				frmReverify.setLocationRelativeTo(this);

				frmReverify.pack();
				frmReverify.setVisible(true);

				if (frmReverify.getReturnStatus() == TrialExtension.RET_OK)
				{
					isGenuine = true;
				}
				else if (!frmReverify.noLongerActivated) // the user clicked cancel and the user is still activated
				{
					// Just bail out of your app
					System.exit(1);
					return;
				}
			}
		}
		catch (Exception e)
		{
			JOptionPane.showMessageDialog(null, "Failed to check if activated: " + e.getMessage(), "Failed basic activation check", JOptionPane.ERROR_MESSAGE);
			System.exit(1);
			return;
		}

		ShowTrial(!isGenuine);

		// if this app is activated then you can get a feature value
		// See: https://wyday.com/limelm/help/license-features/
		/*
		if (isGenuine)
		{
			String featureValue = ta.GetFeatureValue("your feature name");

			//TODO: do something with the featureValue
		}
		*/
	}

	@Override
	public void TrialChange(int status)
	{
		// disable the features of your app
		DisableAppFeatures(status == TurboActivate.TA_CB_EXPIRED_FRAUD);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMain = new javax.swing.JEditorPane();
        lblTrialMessage = new javax.swing.JLabel();
        btnExtendTrial = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuActDeact = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Text Editor Plus");

        txtMain.setText("This is a simple Text Editor app that demonstrates how to use TurboActivate in your application.\n\nThe one \"feature\" of this app is this text editor. This will be disabled when the user is not activated and the trial is expired. All other times this text box will be enabled.");
        txtMain.setName("txtMain"); // NOI18N
        jScrollPane1.setViewportView(txtMain);

        lblTrialMessage.setText("Your trial expires in X");
        lblTrialMessage.setName("lblTrialMessage"); // NOI18N

        btnExtendTrial.setLabel("Extend trial");
        btnExtendTrial.setName("btnExtendTrial"); // NOI18N
        btnExtendTrial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtendTrial_Click(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem3.setText("Help contents");
        jMenu2.add(jMenuItem3);

        mnuActDeact.setText("Deactivate");
        mnuActDeact.setName("mnuActDeact"); // NOI18N
        mnuActDeact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuActDeact_Click(evt);
            }
        });
        jMenu2.add(mnuActDeact);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTrialMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(btnExtendTrial, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrialMessage)
                    .addComponent(btnExtendTrial, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuActDeact_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuActDeact_Click

		try
		{
			if (isGenuine)
			{
				// deactivate product without deleting the product key
				// allows the user to easily reactivate
				ta.Deactivate(false);
				isGenuine = false;
				ShowTrial(true);
			}
			else
			{
				// use a simple activation interface
				PKey pkeyBox = new PKey(this, true, ta);
				pkeyBox.setLocationRelativeTo(this);

				pkeyBox.pack();
				pkeyBox.setVisible(true);

				// recheck if activated
				if (pkeyBox.getReturnStatus() == PKey.RET_OK && ta.IsActivated())
				{
					isGenuine = true;
					ReEnableAppFeatures();
					ShowTrial(false);
				}
			}
		}
		catch (Exception e)
		{
			JOptionPane.showMessageDialog(null, "Failed to activate" + e.getMessage(), "Failed to activate", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_mnuActDeact_Click

    private void btnExtendTrial_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtendTrial_Click
		TrialExtension extendBox = new TrialExtension(this, true, ta, trialFlags);
		extendBox.setLocationRelativeTo(this);

	   	extendBox.pack();
		extendBox.setVisible(true);

		if (extendBox.getReturnStatus() == TrialExtension.RET_OK)
		{
			// get the number of remaining trial days
			int trialDaysRemaining = 0;

			try
			{
				trialDaysRemaining = ta.TrialDaysRemaining(trialFlags);
			}
			catch (Exception ex)
			{
				JOptionPane.showMessageDialog(null, "Failed to get the trial days remaining: " + ex.getMessage(), "Failed to get the trial days remaining", JOptionPane.ERROR_MESSAGE);
			}

			// if more trial days then re-enable all app features
			if (trialDaysRemaining > 0)
			{
				ReEnableAppFeatures();
				lblTrialMessage.setText("Your trial expires in " + trialDaysRemaining + " days.");
			}
		}
    }//GEN-LAST:event_btnExtendTrial_Click



	/**
	 * Put this app in either trial mode or "full mode"
	 * 
	 * @param show If true show the trial, otherwise hide the trial.
	 */
	final void ShowTrial(boolean show)
	{
		lblTrialMessage.setVisible(show);
		btnExtendTrial.setVisible(show);
		mnuActDeact.setText(show ? "Activate..." : "Deactivate");

		if (show)
		{
			int trialDaysRemaining = 0;

			try
			{
				ta.UseTrial(trialFlags);

				// get the number of remaining trial days
				trialDaysRemaining = ta.TrialDaysRemaining(trialFlags);
			}
			catch (TrialExpiredException e)
			{
				// do nothing because trialDaysRemaining is already set to 0
			}
			catch (Exception e)
			{
				JOptionPane.showMessageDialog(null, "Failed to start the trial: " + e.getMessage(), "Failed to start the trial", JOptionPane.ERROR_MESSAGE);
			}

			// if no more trial days then disable all app features
			if (trialDaysRemaining == 0)
				DisableAppFeatures(false);
			else
				lblTrialMessage.setText("Your trial expires in " + trialDaysRemaining + " days.");
		}
	}

	/**
	 * Change this function to disable the features of your app.
	 * @param timeFraudFlag true if the trial has expired due to date/time fraud.
	 */
	final void DisableAppFeatures(boolean timeFraudFlag)
	{
		//TODO: disable all the features of the program
		txtMain.setEnabled(false);

		if (!timeFraudFlag)
			lblTrialMessage.setText("The trial has expired. Get an extension at Example.com");
		else
			lblTrialMessage.setText("The trial has expired due to date/time fraud detected");
	}

	/**
	 * Change this function to re-enable the features of your app.
	 */
	final void ReEnableAppFeatures()
	{
		//TODO: re-enable all the features of the program
		txtMain.setEnabled(true);
	}
	
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			// try to set the system look and feel (rather than the hideous Java look and feel
			javax.swing.UIManager.setLookAndFeel( javax.swing.UIManager.getSystemLookAndFeelClassName());

		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frmMain().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExtendTrial;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTrialMessage;
    private javax.swing.JMenuItem mnuActDeact;
    private javax.swing.JEditorPane txtMain;
    // End of variables declaration//GEN-END:variables
}
