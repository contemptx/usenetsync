name: Build Windows Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
        
      - name: Install frontend dependencies
        run: |
          cd usenet-sync-app
          npm install
          
      - name: Ensure required files exist
        run: |
          cd usenet-sync-app
          # These files should exist from git, but ensure they're there
          if (!(Test-Path "postcss.config.js")) {
            Write-Host "Warning: postcss.config.js missing"
          }
          if (!(Test-Path "src/styles.css")) {
            Write-Host "Warning: src/styles.css missing"
          }
          if (!(Test-Path "src/lib/tauri.ts")) {
            Write-Host "Warning: src/lib/tauri.ts missing"
          }
          
      - name: Install Rust target for Windows
        run: |
          rustup target add x86_64-pc-windows-msvc
          rustup default stable-x86_64-pc-windows-msvc
          
      - name: Install Tauri CLI
        run: |
          cargo install tauri-cli --version "^2.0.0"
          
      - name: Build frontend
        run: |
          cd usenet-sync-app
          npm run build
          
      - name: Build Tauri application
        run: |
          cd usenet-sync-app
          npm run tauri build -- --verbose
        continue-on-error: true
          
      - name: Check build output
        if: always()
        run: |
          echo "Checking for build artifacts..."
          if (Test-Path "usenet-sync-app/src-tauri/target/release/usenet-sync-app.exe") {
            echo "✓ Executable found"
            dir usenet-sync-app/src-tauri/target/release/
          } else {
            echo "✗ Executable not found"
          }
          if (Test-Path "usenet-sync-app/src-tauri/target/release/bundle") {
            echo "✓ Bundle directory found"
            dir usenet-sync-app/src-tauri/target/release/bundle/
          } else {
            echo "✗ Bundle directory not found"
          }
          
      - name: Upload NSIS Installer
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: UsenetSync-NSIS-Installer
          path: usenet-sync-app/src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: warn
          
      - name: Upload MSI Installer
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: UsenetSync-MSI-Installer
          path: usenet-sync-app/src-tauri/target/release/bundle/msi/*.msi
          if-no-files-found: warn
          
      - name: Upload executable as fallback
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: UsenetSync-Executable
          path: usenet-sync-app/src-tauri/target/release/*.exe
          if-no-files-found: warn
          
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            usenet-sync-app/src-tauri/target/release/bundle/nsis/*.exe
            usenet-sync-app/src-tauri/target/release/bundle/msi/*.msi
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## UsenetSync Windows Release
            
            ### Installation
            - Download `UsenetSync_1.0.0_x64-setup.exe` for standard installation
            - Or download `UsenetSync_1.0.0_x64_en-US.msi` for enterprise deployment
            
            ### Requirements
            - Windows 10/11 (64-bit)
            - 4GB RAM minimum
            - 2GB free disk space
            
            ### What's Included
            - Full UsenetSync application
            - PostgreSQL auto-installation
            - Python runtime
            - TurboActivate licensing
            - All dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}