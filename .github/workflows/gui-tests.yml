name: GUI Tests

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug mode'
        required: false
        default: false

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: frontend/src-tauri
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwebkit2gtk-4.0-dev \
          build-essential \
          curl \
          wget \
          libssl-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libxdo-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev
          
    - name: Install tauri-driver
      run: cargo install tauri-driver
      
    - name: Install frontend dependencies
      working-directory: frontend
      run: |
        npm ci
        npm install -D @wdio/cli @wdio/local-runner @wdio/mocha-framework @wdio/spec-reporter
        npm install -D @wdio/visual-regression-service webdriver-image-comparison
        npm install -D @wdio/allure-reporter @wdio/junit-reporter
        npm install -D ts-node typescript
        
    - name: Build Tauri app
      working-directory: frontend
      run: npm run build
      
    - name: Run GUI tests
      working-directory: frontend
      run: npm run test:e2e
      env:
        CI: true
        DISPLAY: ':99.0'
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          frontend/test-results/
          frontend/allure-results/
          frontend/tests/visual-screenshots/
          
    - name: Upload visual regression baselines
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: visual-baselines-${{ matrix.os }}
        path: frontend/tests/visual-baseline/
        
    - name: Generate Allure Report
      if: always()
      working-directory: frontend
      run: |
        npm install -g allure-commandline
        allure generate allure-results --clean -o allure-report
        
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-${{ matrix.os }}-node${{ matrix.node-version }}
        path: frontend/allure-report/
        
    - name: Setup tmate session for debugging
      if: ${{ failure() && github.event.inputs.debug_enabled }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

  ai-triage:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        path: test-artifacts/
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install AI triage dependencies
      run: |
        pip install openai langchain pillow numpy opencv-python
        pip install xmltodict json5
        
    - name: Run AI triage script
      id: ai-triage
      run: python .github/scripts/ai-triage.py
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create issue for failures
      if: steps.ai-triage.outputs.create-issue == 'true'
      uses: peter-evans/create-issue@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: "GUI Test Failures - AI Analysis"
        body: ${{ steps.ai-triage.outputs.issue-body }}
        labels: "bug,gui-test,ai-triage"
        
  autofix:
    needs: ai-triage
    if: failure()
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Download triage results
      uses: actions/download-artifact@v4
      with:
        name: ai-triage-results
        path: triage-results/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Apply AI-suggested fixes
      id: autofix
      run: |
        node .github/scripts/apply-autofix.js
        
    - name: Run tests locally to verify fixes
      working-directory: frontend
      run: |
        npm ci
        npm run test:e2e -- --spec tests/e2e/gui-complete-workflow.spec.ts
      continue-on-error: true
      
    - name: Create Pull Request with fixes
      if: steps.autofix.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "fix: AI-suggested fixes for GUI test failures"
        title: "AI Autofix: GUI Test Failures"
        body: |
          ## AI-Generated Fixes
          
          This PR contains automated fixes suggested by AI analysis of test failures.
          
          ### Changes Made:
          ${{ steps.autofix.outputs.changes-summary }}
          
          ### Test Results:
          ${{ steps.autofix.outputs.test-results }}
          
          Please review these changes carefully before merging.
        branch: ai-autofix/gui-tests-${{ github.run_number }}
        labels: "autofix,gui-test,ai-generated"# Workflow trigger: Thu Aug 21 08:58:06 AM UTC 2025
