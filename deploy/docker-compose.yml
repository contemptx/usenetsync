version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: usenetsync-db
    environment:
      POSTGRES_DB: usenetsync
      POSTGRES_USER: usenetsync
      POSTGRES_PASSWORD: usenetsync123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usenetsync"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # UsenetSync Application
  usenetsync:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: usenetsync-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: usenetsync
      DB_USER: usenetsync
      DB_PASSWORD: usenetsync123
      NNTP_HOST: news.newshosting.com
      NNTP_PORT: 563
      NNTP_USER: ${NNTP_USER}
      NNTP_PASSWORD: ${NNTP_PASSWORD}
    volumes:
      - app_data:/data
      - app_logs:/logs
      - ./config:/config
    ports:
      - "8000:8000"  # API
      - "9090:9090"  # Prometheus metrics
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: usenetsync-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: usenetsync-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: usenetsync-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - usenetsync
    restart: unless-stopped

volumes:
  postgres_data:
  app_data:
  app_logs:
  prometheus_data:
  grafana_data: